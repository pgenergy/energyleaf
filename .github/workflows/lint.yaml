on:
  pull_request:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest
    env:
      HASH_SECRET: ${{ secrets.HASH_SECRET }}
      CRON_SECRET: ${{ secrets.CRON_SECRET }}
      NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
      NEXT_PUBLIC_ADMIN_URL: ${{ secrets.NEXT_PUBLIC_ADMIN_URL }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      PG_CONNECTION: ${{ secrets.PG_CONNECTION }}
      PG_DIRECT: ${{ secrets.PG_DIRECT }}
      ADMIN_MAIL: ${{ secrets.ADMIN_MAIL }}
      ML_API_KEY: ${{ secrets.ML_API_KEY }}
      ML_API_URL: ${{ secrets.ML_API_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint
